@startuml 03-ComponentDiagram
!include <C4/C4_Container>

/' Level 3: Component diagram
   The Component diagram shows how a container is made up of a number of "components",
   what each of those components are, their responsibilities and the technology/implementation details.
'/

title "Component Diagram for Wallet Service"

AddElementTag("storage", $shape=RoundedBoxShape())

LAYOUT_TOP_DOWN()

Person(user, "User", "A person managing their wallet")

System_Boundary(walletservice, "Wallet Service") {
    Container_Boundary(restEntrypoint, "REST Entrypoint") {
        Container(walletController, "Wallet Controller", "Component: @RestController", "Handles wallet-related requests")
        Container(transactionController, "Transaction Controller", "Component: @RestController", "Handles transaction-related requests")
    }
    
    Container_Boundary(coreBusiness, "Core Business") {
        Container(createWalletUseCase, "Create Wallet UseCase", "Component: @Service", "Handles wallet creation logic")
        Container(retrieveBalanceUseCase, "Retrieve Balance UseCase", "Component: @Service", "Handles balance retrieval logic")
        Container(depositFundsUseCase, "Deposit Funds UseCase", "Component: @Service", "Handles deposits")
        Container(withdrawFundsUseCase, "Withdraw Funds UseCase", "Component: @Service", "Handles withdrawals")
        Container(transferFundsUseCase, "Transfer Funds UseCase", "Component: @Service", "Handles transfers")
    }
    
    Container_Boundary(infrastructure, "Infrastructure") {
        Container(walletRepository, "Wallet Repository", "Component: @Repository", "Handles database operations for wallets")
        Container(transactionRepository, "Transaction Repository", "Component: @Repository", "Handles database operations for transactions")
        Container(orm, "Object Relational Mapper", "JPA : Hibernate", "Maps objects to relational tables")
    }
}

ContainerDb(database, "Database", "H2", "Stores wallet and transaction data", $tags = "storage")

Rel_D(user, walletController, "Sends requests", "JSON via HTTPS")
Rel_D(walletController, createWalletUseCase, "Calls", "method")
Rel_D(walletController, retrieveBalanceUseCase, "Calls", "method")
Rel_D(transactionController, depositFundsUseCase, "Calls", "method")
Rel_D(transactionController, withdrawFundsUseCase, "Calls", "method")
Rel_D(transactionController, transferFundsUseCase, "Calls", "method")

Rel_D(createWalletUseCase, walletRepository, "Interacts with", "JPA Repository")
Rel_D(retrieveBalanceUseCase, walletRepository, "Interacts with", "JPA Repository")
Rel_D(depositFundsUseCase, transactionRepository, "Interacts with", "JPA Repository")
Rel_D(withdrawFundsUseCase, transactionRepository, "Interacts with", "JPA Repository")
Rel_D(transferFundsUseCase, transactionRepository, "Interacts with", "JPA Repository")
Rel_D(walletRepository, orm, "Uses", "JPA")
Rel_D(transactionRepository, orm, "Uses", "JPA")
Rel_D(orm, database, "Saves to", "tables")

LAYOUT_WITH_LEGEND()

@enduml
